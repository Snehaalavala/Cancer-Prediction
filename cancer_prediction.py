# -*- coding: utf-8 -*-
"""Cancer Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ha1FKKe8nFluqPn1OcQZlMPL2xNwnQTt

# **Cancer Prediction**

---

# Objective

Dataset Information:

Target Variable (y):

Diagnosis (M = malignant, B = benign)

Ten features (X) are computed for each cell nucleus:

1.radius (mean of distances from center to points on the perimeter)

2.texture (standard deviation of gray-scale values)

3.perimeter

4.area

5.smoothness (local variation in radius lengths)

6.compactness (perimeter^2 / area - 1.0)

7.concavity (severity of concave portions of the contour)

8.concave points (number of concave portions of the contour)

9.symmetry

10.fractal dimension (coastline approximation - 1)

For each characteristic three measures are given:

a. Mean

b. Standard error

c. Largest/ Worst

 The task is to train the model and detect whether the cell is malignant or benign.

# Data Source

https://github.com/YBIFoundation/Dataset/raw/main/Cancer.csv

# Import Library
"""

import pandas as pd

"""# Import Data"""

cancer = pd.read_csv('https://github.com/YBIFoundation/Dataset/raw/main/Cancer.csv')

"""# Describe Data"""

cancer.head()

cancer.info()

cancer.describe()

cancer.columns

"""# Define target (y) and features (X)"""

y = cancer['diagnosis']

X = cancer.drop(['id','diagnosis','Unnamed: 32'],axis=1)

"""# Train Test Split"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y, train_size=0.7, random_state=2529)

X_train.shape, X_test.shape, y_train.shape, y_test.shape

"""# Modeling"""

from sklearn.linear_model import LogisticRegression
model = LogisticRegression(max_iter=5000)

model.fit(X_train,y_train)

"""# Model Evaluation"""

LogisticRegression(max_iter=5000)

model.intercept_

model.coef_

"""# Prediction"""

y_pred = model.predict(X_test)

y_pred

# model accuracy
from sklearn.metrics import confusion_matrix, accuracy_score, classification_report

confusion_matrix(y_test,y_pred)

accuracy_score(y_test,y_pred)

print(classification_report(y_test,y_pred))

"""# Explanation

For each cell nucleaus ten kinds of features are considered and evaluated as malignant or bengin i.e. 'M' or 'B'. Our model is trained using logistic regression and it gives an accuracy of
0.9590643274853801.
"""